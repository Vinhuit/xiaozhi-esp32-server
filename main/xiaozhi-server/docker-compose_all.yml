# Docker install all modules

version: '3'
services:
  asr-server:
    image: caubequay00/asr-server:latest
    restart: always
    container_name: asr-server
    extra_hosts:
        - "host.docker.internal:host-gateway"
    ports:
      - 8298:8298
      - 8010:8010
      - 8011:8011
      - 8022:8022
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    volumes:
      - ./models/viet-tts/pretrained-models:/app/pretrained-models
      - ./models:/app/models
 
    command: python3 models/server.py --host 0.0.0.0 --port 8022 --model turbo
      # sh -c "python3 server.py --host 0.0.0.0 --port 8022 --model turbo & cd models/viet-tts && nohup viettts server --host 0.0.0.0 --port 8298 > /dev/null 2>&1 & wait"
  # asr-server:
  #   image: whisperlivekit-defaults
  #   restart: always
  #   container_name: asr-server
  #   extra_hosts:
  #       - "host.docker.internal:host-gateway"
  #   ports:
  #     - 8010:8010
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   volumes:
  #     - ./models/asr:/models/asr
  #   # Default args
  #   command: ["bash", "-c", "sleep 10000"]
  # # Server module
  mcp-endpoint-server:
    image: ghcr.nju.edu.cn/xinnan-tech/mcp-endpoint-server:latest
    container_name: mcp-endpoint-server
    restart: always
    networks:
      - default
    extra_hosts:
        - "host.docker.internal:host-gateway"
    ports:
      - "8004:8004"
    security_opt:
      - seccomp:unconfined
    environment:
      - TZ=Asia/Shanghai
    volumes:
      # 配置文件目录
      - ./data:/app/data
  voiceprint-api:
    image: ghcr.nju.edu.cn/xinnan-tech/voiceprint-api:latest
    container_name: voiceprint-api
    restart: always
    extra_hosts:
        - "host.docker.internal:host-gateway"
    depends_on:
      xiaozhi-esp32-server-db:
        condition: service_healthy
    security_opt:
      - seccomp:unconfined
    networks:
      - default
    ports:
      - "8005:8005"
    volumes:
      - ./voiceprint/data:/app/data
    environment:
      - TZ=Asia/Shanghai

  kokoro-fastapi-gpu:
      image:  ghcr.io/remsky/kokoro-fastapi-gpu
      container_name: kokoro-fastapi-gpu
      deploy:
        resources:
          reservations:
            devices:
              - capabilities: [gpu]    
      restart: always
      extra_hosts:
        - "host.docker.internal:host-gateway"
      networks:
        - default
      ports:
        - "8880:8880"
       
      security_opt:
        - seccomp:unconfined
      environment:
        - TZ=Asia/Shanghai
  xiaozhi-esp32-server:
    image:  docker.io/caubequay00/xiaozhi-esp32-server:latest
    container_name: xiaozhi-esp32-server
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    depends_on:
      - xiaozhi-esp32-server-db
      - xiaozhi-esp32-server-redis
      - asr-server
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - default
    ports:
      # ws server
      - "8000:8000"
      # http service port, for vision analysis API
      - "8003:8003"
      - "6006:6006"
    security_opt:
      - seccomp:unconfined
    environment:
      - TZ=Asia/Shanghai
    volumes:
      # Config directory
      - ./data:/opt/xiaozhi-esp32-server/data
      - ./models/:/opt/xiaozhi-esp32-server/models
      # - ./models/SenseVoiceSmall:/opt/xiaozhi-esp32-server/models/SenseVoiceSmall/
    # command: bash -c 'pip install aioconsole ; sleep 100000'
  xiaozhi-esp32-server-web:
    image: caubequay00/xiaozhi-esp32-server-web:latest
    container_name: xiaozhi-esp32-server-web
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - default
    depends_on:
      xiaozhi-esp32-server-db:
        condition: service_healthy
      xiaozhi-esp32-server-redis:
        condition: service_healthy
    ports:
      # Control panel
      - "8002:8002"
    environment:
      - TZ=Asia/Shanghai
      - SPRING_DATASOURCE_DRUID_URL=jdbc:mysql://xiaozhi-esp32-server-db:3306/xiaozhi_esp32_server?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true&connectTimeout=30000&socketTimeout=30000&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
      - SPRING_DATASOURCE_DRUID_USERNAME=root
      - SPRING_DATASOURCE_DRUID_PASSWORD=123456
      - SPRING_DATA_REDIS_HOST=xiaozhi-esp32-server-redis
      - SPRING_DATA_REDIS_PASSWORD=
      - SPRING_DATA_REDIS_PORT=6379
    volumes:
      # Config directory
      - ./uploadfile:/uploadfile
  # Database module
  xiaozhi-esp32-server-db:
    image: mysql:latest
    container_name: xiaozhi-esp32-server-db
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    networks:
      - default
    expose:
      - 3306
    ports:
      # Control panel
      - "3306:3306"
    volumes:
      - ./mysql/data:/var/lib/mysql
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=xiaozhi_esp32_server
      - MYSQL_INITDB_ARGS="--character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
  # redis module
  xiaozhi-esp32-server-redis:
    image: redis
    expose:
      - 6379
    ports:
      # Control panel
      - "6379:6379"
    container_name: xiaozhi-esp32-server-redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - default
networks:
  default:
